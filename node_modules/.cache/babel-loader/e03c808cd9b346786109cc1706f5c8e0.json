{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\workspace\\\\yoru-ui-web\\\\src\\\\effectPages\\\\TransitionGrid\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useSpring, animated, interpolate, config } from \"react-spring\";\nimport { useGesture } from \"react-with-gesture\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Slider({\n  children\n}) {\n  _s();\n\n  // See: https://github.com/drcmda/react-with-gesture\n  // Gives access to: down, x, y, xDelta, yDelta, xInitial, yInitial\n  const [handlers, {\n    xDelta,\n    down\n  }] = useGesture();\n  const [{\n    x,\n    y,\n    bg,\n    pers,\n    size\n  }] = useSpring({\n    x: down ? xDelta : 0,\n    y: down ? -30 : 0,\n    pers: `perspective(800px) rotateX(${down ? 45 : 0}deg)`,\n    bg: `linear-gradient(120deg, ${xDelta < 0 ? \"#f093fb 0%, #f5576c\" : \"#96fbc4 0%, #f9f586\"} 100%)`,\n    size: down ? 1.15 : 1,\n    immediate: name => down && name === \"x\"\n  });\n  const avSize = x.interpolate({\n    map: Math.abs,\n    range: [50, 300],\n    output: [\"scale(0.5)\", \"scale(1)\"],\n    extrapolate: \"clamp\"\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, { ...handlers,\n    class: \"item\",\n    style: {\n      background: bg,\n      transform: pers\n    },\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      class: \"av\",\n      style: {\n        transform: avSize,\n        justifySelf: xDelta < 0 ? \"end\" : \"start\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      class: \"fg\",\n      style: {\n        transform: interpolate([x, y, size], (x, y, s) => `translate3d(${x}px,${y}px,0) scale(${s})`)\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"1MgBfIdZNxcmgWeaWC9aUjihkyU=\", false, function () {\n  return [useGesture, useSpring];\n});\n\n_c = Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/TransitionGrid/index.js"],"names":["React","ReactDOM","useSpring","animated","interpolate","config","useGesture","styled","Slider","children","handlers","xDelta","down","x","y","bg","pers","size","immediate","name","avSize","map","Math","abs","range","output","extrapolate","background","transform","justifySelf","s"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,cAAzD;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AAC5B;AACA;AACA,QAAM,CAACC,QAAD,EAAW;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAX,IAA+BN,UAAU,EAA/C;AACA,QAAM,CAAC;AAAEO,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAAD,IAA6Bf,SAAS,CAAC;AAC3CW,IAAAA,CAAC,EAAED,IAAI,GAAGD,MAAH,GAAY,CADwB;AAE3CG,IAAAA,CAAC,EAAEF,IAAI,GAAG,CAAC,EAAJ,GAAS,CAF2B;AAG3CI,IAAAA,IAAI,EAAG,8BAA6BJ,IAAI,GAAG,EAAH,GAAQ,CAAE,MAHP;AAI3CG,IAAAA,EAAE,EAAG,2BACHJ,MAAM,GAAG,CAAT,GAAa,qBAAb,GAAqC,qBACtC,QAN0C;AAO3CM,IAAAA,IAAI,EAAEL,IAAI,GAAG,IAAH,GAAU,CAPuB;AAQ3CM,IAAAA,SAAS,EAAGC,IAAD,IAAUP,IAAI,IAAIO,IAAI,KAAK;AARK,GAAD,CAA5C;AAUA,QAAMC,MAAM,GAAGP,CAAC,CAACT,WAAF,CAAc;AAC3BiB,IAAAA,GAAG,EAAEC,IAAI,CAACC,GADiB;AAE3BC,IAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,GAAL,CAFoB;AAG3BC,IAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,UAAf,CAHmB;AAI3BC,IAAAA,WAAW,EAAE;AAJc,GAAd,CAAf;AAMA,sBACE,QAAC,QAAD,CAAU,GAAV,OACMhB,QADN;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,UAAU,EAAEZ,EAAd;AAAkBa,MAAAA,SAAS,EAAEZ;AAA7B,KAHT;AAAA,4BAKE,QAAC,QAAD,CAAU,GAAV;AACE,MAAA,KAAK,EAAC,IADR;AAEE,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAER,MAAb;AAAqBS,QAAAA,WAAW,EAAElB,MAAM,GAAG,CAAT,GAAa,KAAb,GAAqB;AAAvD;AAFT;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,QAAD,CAAU,GAAV;AACE,MAAA,KAAK,EAAC,IADR;AAEE,MAAA,KAAK,EAAE;AACLiB,QAAAA,SAAS,EAAExB,WAAW,CACpB,CAACS,CAAD,EAAIC,CAAJ,EAAOG,IAAP,CADoB,EAEpB,CAACJ,CAAD,EAAIC,CAAJ,EAAOgB,CAAP,KAAc,eAAcjB,CAAE,MAAKC,CAAE,eAAcgB,CAAE,GAFjC;AADjB,OAFT;AAAA,6BASE;AAAA,kBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA3CQD,M;UAG8BF,U,EACFJ,S;;;KAJ5BM,M","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useSpring, animated, interpolate, config } from \"react-spring\";\r\nimport { useGesture } from \"react-with-gesture\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Slider({ children }) {\r\n  // See: https://github.com/drcmda/react-with-gesture\r\n  // Gives access to: down, x, y, xDelta, yDelta, xInitial, yInitial\r\n  const [handlers, { xDelta, down }] = useGesture();\r\n  const [{ x, y, bg, pers, size }] = useSpring({\r\n    x: down ? xDelta : 0,\r\n    y: down ? -30 : 0,\r\n    pers: `perspective(800px) rotateX(${down ? 45 : 0}deg)`,\r\n    bg: `linear-gradient(120deg, ${\r\n      xDelta < 0 ? \"#f093fb 0%, #f5576c\" : \"#96fbc4 0%, #f9f586\"\r\n    } 100%)`,\r\n    size: down ? 1.15 : 1,\r\n    immediate: (name) => down && name === \"x\",\r\n  });\r\n  const avSize = x.interpolate({\r\n    map: Math.abs,\r\n    range: [50, 300],\r\n    output: [\"scale(0.5)\", \"scale(1)\"],\r\n    extrapolate: \"clamp\",\r\n  });\r\n  return (\r\n    <animated.div\r\n      {...handlers}\r\n      class=\"item\"\r\n      style={{ background: bg, transform: pers }}\r\n    >\r\n      <animated.div\r\n        class=\"av\"\r\n        style={{ transform: avSize, justifySelf: xDelta < 0 ? \"end\" : \"start\" }}\r\n      />\r\n      <animated.div\r\n        class=\"fg\"\r\n        style={{\r\n          transform: interpolate(\r\n            [x, y, size],\r\n            (x, y, s) => `translate3d(${x}px,${y}px,0) scale(${s})`\r\n          ),\r\n        }}\r\n      >\r\n        <i>{children}</i>\r\n      </animated.div>\r\n    </animated.div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}