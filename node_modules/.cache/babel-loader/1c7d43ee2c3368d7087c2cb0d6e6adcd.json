{"ast":null,"code":"export class Point {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  add(point) {\n    this.x += point.x;\n    this.y += point.y;\n    return this;\n  }\n\n  subtract(point) {\n    this.x -= point.x;\n    this.y -= point.y;\n    return this;\n  }\n\n  reduce(value) {\n    this.x *= value;\n    this.y *= value;\n    return this;\n  }\n\n  collide(point, width, height) {\n    if (this.x >= point.x && this.x <= point.x + width && this.y >= point.y && this.y <= point.y + height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/MoveRect/point.js"],"names":["Point","constructor","x","y","add","point","subtract","reduce","value","collide","width","height","clone"],"mappings":"AAAA,OAAO,MAAMA,KAAN,CAAY;AACjBC,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAO;AAChB,SAAKD,CAAL,GAASA,CAAC,IAAI,CAAd;AACA,SAAKC,CAAL,GAASA,CAAC,IAAI,CAAd;AACD;;AAEDC,EAAAA,GAAG,CAACC,KAAD,EAAQ;AACT,SAAKH,CAAL,IAAUG,KAAK,CAACH,CAAhB;AACA,SAAKC,CAAL,IAAUE,KAAK,CAACF,CAAhB;AACA,WAAO,IAAP;AACD;;AAEDG,EAAAA,QAAQ,CAACD,KAAD,EAAQ;AACd,SAAKH,CAAL,IAAUG,KAAK,CAACH,CAAhB;AACA,SAAKC,CAAL,IAAUE,KAAK,CAACF,CAAhB;AACA,WAAO,IAAP;AACD;;AAEDI,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,SAAKN,CAAL,IAAUM,KAAV;AACA,SAAKL,CAAL,IAAUK,KAAV;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,OAAO,CAACJ,KAAD,EAAQK,KAAR,EAAeC,MAAf,EAAuB;AAC5B,QACE,KAAKT,CAAL,IAAUG,KAAK,CAACH,CAAhB,IACA,KAAKA,CAAL,IAAUG,KAAK,CAACH,CAAN,GAAUQ,KADpB,IAEA,KAAKP,CAAL,IAAUE,KAAK,CAACF,CAFhB,IAGA,KAAKA,CAAL,IAAUE,KAAK,CAACF,CAAN,GAAUQ,MAJtB,EAKE;AACA,aAAO,IAAP;AACD,KAPD,MAOO;AACL,aAAO,KAAP;AACD;AACF;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIZ,KAAJ,CAAU,KAAKE,CAAf,EAAkB,KAAKC,CAAvB,CAAP;AACD;;AAvCgB","sourcesContent":["export class Point {\r\n  constructor(x, y) {\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n  }\r\n\r\n  add(point) {\r\n    this.x += point.x;\r\n    this.y += point.y;\r\n    return this;\r\n  }\r\n\r\n  subtract(point) {\r\n    this.x -= point.x;\r\n    this.y -= point.y;\r\n    return this;\r\n  }\r\n\r\n  reduce(value) {\r\n    this.x *= value;\r\n    this.y *= value;\r\n    return this;\r\n  }\r\n\r\n  collide(point, width, height) {\r\n    if (\r\n      this.x >= point.x &&\r\n      this.x <= point.x + width &&\r\n      this.y >= point.y &&\r\n      this.y <= point.y + height\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    return new Point(this.x, this.y);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}