{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\workspace\\\\yoru-ui-web\\\\src\\\\effectPages\\\\SimpleCharacterMoving\\\\components\\\\player\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Actor from \"../actor\";\nimport useKeyPress from \"../../hooks/use-key-press\";\nimport useWalk from \"../../hooks/use-walk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  skin\n}) {\n  _s();\n\n  const {\n    dir,\n    step,\n    walk,\n    position,\n    directions\n  } = useWalk(3);\n  const data = {\n    w: 32,\n    h: 32\n  };\n  useKeyPress(e => {\n    const dir = e.key.replace(\"Arrow\", \"\").toLowerCase();\n    if (directions.hasOwnProperty(dir)) walk(e.key.replace(\"Arrow\", \"\").toLowerCase());\n    e.preventDefault();\n  });\n  return /*#__PURE__*/_jsxDEV(Actor, {\n    sprite: skin,\n    data: data,\n    step: step,\n    dir: dir,\n    position: position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"5NSQg1Fn06X2CO8wIzoCarb0Ivg=\", false, function () {\n  return [useWalk, useKeyPress];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/SimpleCharacterMoving/components/player/index.jsx"],"names":["React","Actor","useKeyPress","useWalk","Player","skin","dir","step","walk","position","directions","data","w","h","e","key","replace","toLowerCase","hasOwnProperty","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA4CP,OAAO,CAAC,CAAD,CAAzD;AACA,QAAMQ,IAAI,GAAG;AACXC,IAAAA,CAAC,EAAE,EADQ;AAEXC,IAAAA,CAAC,EAAE;AAFQ,GAAb;AAKAX,EAAAA,WAAW,CAAEY,CAAD,IAAO;AACjB,UAAMR,GAAG,GAAGQ,CAAC,CAACC,GAAF,CAAMC,OAAN,CAAc,OAAd,EAAuB,EAAvB,EAA2BC,WAA3B,EAAZ;AACA,QAAIP,UAAU,CAACQ,cAAX,CAA0BZ,GAA1B,CAAJ,EACEE,IAAI,CAACM,CAAC,CAACC,GAAF,CAAMC,OAAN,CAAc,OAAd,EAAuB,EAAvB,EAA2BC,WAA3B,EAAD,CAAJ;AACFH,IAAAA,CAAC,CAACK,cAAF;AACD,GALU,CAAX;AAOA,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAEd,IADV;AAEE,IAAA,IAAI,EAAEM,IAFR;AAGE,IAAA,IAAI,EAAEJ,IAHR;AAIE,IAAA,GAAG,EAAED,GAJP;AAKE,IAAA,QAAQ,EAAEG;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvBuBL,M;UAC4BD,O,EAMlDD,W;;;KAPsBE,M","sourcesContent":["import React from \"react\";\r\nimport Actor from \"../actor\";\r\nimport useKeyPress from \"../../hooks/use-key-press\";\r\nimport useWalk from \"../../hooks/use-walk\";\r\n\r\nexport default function Player({ skin }) {\r\n  const { dir, step, walk, position, directions } = useWalk(3);\r\n  const data = {\r\n    w: 32,\r\n    h: 32,\r\n  };\r\n\r\n  useKeyPress((e) => {\r\n    const dir = e.key.replace(\"Arrow\", \"\").toLowerCase();\r\n    if (directions.hasOwnProperty(dir))\r\n      walk(e.key.replace(\"Arrow\", \"\").toLowerCase());\r\n    e.preventDefault();\r\n  });\r\n\r\n  return (\r\n    <Actor\r\n      sprite={skin}\r\n      data={data}\r\n      step={step}\r\n      dir={dir}\r\n      position={position}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}