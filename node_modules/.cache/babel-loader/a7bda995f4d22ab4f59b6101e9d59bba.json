{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\workspace\\\\yoru-ui-web\\\\src\\\\effectPages\\\\ThreeBoxMove\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport * as THREE from 'three';\nimport React, { useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { useSprings, a } from '@react-spring/three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst number = 35;\nconst colors = ['#A2CCB6', '#FCEEB5', '#EE786E', '#e0feff', 'lightpink', 'lightblue'];\n\nconst random = i => {\n  const r = Math.random();\n  return {\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    scale: [1 + r * 14, 1 + r * 14, 1],\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n  };\n};\n\nconst data = new Array(number).fill().map(() => {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\n  };\n});\n\nfunction Content() {\n  _s();\n\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: {\n      mass: 20,\n      tension: 150,\n      friction: 50\n    }\n  }));\n  useEffect(() => void setInterval(() => set(i => ({ ...random(i),\n    delay: i * 40\n  })), 3000), []);\n  return data.map((d, index) => /*#__PURE__*/_jsxDEV(a.mesh, { ...springs[index],\n    castShadow: true,\n    receiveShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: d.args\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(a.meshStandardMaterial, {\n      attach: \"material\",\n      color: springs[index].color,\n      roughness: 0.75,\n      metalness: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Content, \"CMuSy9cKMebj2EVz6yDL82xtUh4=\", false, function () {\n  return [useSprings];\n});\n\n_c = Content;\n\nfunction Lights() {\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      intensity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      castShadow: true,\n      intensity: 0.2,\n      angle: Math.PI / 7,\n      position: [150, 150, 250],\n      penumbra: 1,\n      \"shadow-mapSize-width\": 2048,\n      \"shadow-mapSize-height\": 2048\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Lights;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      width: \"100%\"\n    },\n    linear: true,\n    shadows: true,\n    camera: {\n      position: [0, 0, 100],\n      fov: 100\n    },\n    children: [/*#__PURE__*/_jsxDEV(Lights, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Lights\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/ThreeBoxMove/index.js"],"names":["THREE","React","useEffect","Canvas","useSprings","a","number","colors","random","i","r","Math","position","color","round","length","scale","rotation","degToRad","data","Array","fill","map","args","Content","springs","set","from","config","mass","tension","friction","setInterval","delay","d","index","Lights","PI","App","width","fov"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\r\nimport React, { useEffect } from 'react'\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { useSprings, a } from '@react-spring/three'\r\n\r\nconst number = 35\r\nconst colors = ['#A2CCB6', '#FCEEB5', '#EE786E', '#e0feff', 'lightpink', 'lightblue']\r\nconst random = (i) => {\r\n  const r = Math.random()\r\n  return {\r\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\r\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\r\n    scale: [1 + r * 14, 1 + r * 14, 1],\r\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\r\n  }\r\n}\r\n\r\nconst data = new Array(number).fill().map(() => {\r\n  return {\r\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\r\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\r\n  }\r\n})\r\n\r\nfunction Content() {\r\n  const [springs, set] = useSprings(number, (i) => ({\r\n    from: random(i),\r\n    ...random(i),\r\n    config: { mass: 20, tension: 150, friction: 50 }\r\n  }))\r\n  useEffect(() => void setInterval(() => set((i) => ({ ...random(i), delay: i * 40 })), 3000), [])\r\n  return data.map((d, index) => (\r\n    <a.mesh key={index} {...springs[index]} castShadow receiveShadow>\r\n      <boxBufferGeometry attach=\"geometry\" args={d.args} />\r\n      <a.meshStandardMaterial attach=\"material\" color={springs[index].color} roughness={0.75} metalness={0.5} />\r\n    </a.mesh>\r\n  ))\r\n}\r\n\r\nfunction Lights() {\r\n  return (\r\n    <group>\r\n      <pointLight intensity={0.3} />\r\n      <ambientLight intensity={2} />\r\n      <spotLight\r\n        castShadow\r\n        intensity={0.2}\r\n        angle={Math.PI / 7}\r\n        position={[150, 150, 250]}\r\n        penumbra={1}\r\n        shadow-mapSize-width={2048}\r\n        shadow-mapSize-height={2048}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas style={{width:\"100%\"}} linear shadows camera={{ position: [0, 0, 100], fov: 100 }}>\r\n      <Lights />\r\n      <Content />\r\n    </Canvas>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}