{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\workspace\\\\yoru-ui-web\\\\src\\\\effectPages\\\\TransitionGrid\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated, interpolate, config } from 'react-spring';\nimport { useGesture } from 'react-with-gesture';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Slider({\n  children\n}) {\n  _s();\n\n  // See: https://github.com/drcmda/react-with-gesture\n  // Gives access to: down, x, y, xDelta, yDelta, xInitial, yInitial\n  const [handlers, {\n    xDelta,\n    down\n  }] = useGesture();\n  const [{\n    x,\n    y,\n    bg,\n    pers,\n    size\n  }] = useSpring({\n    x: down ? xDelta : 0,\n    y: down ? -30 : 0,\n    pers: `perspective(800px) rotateX(${down ? 45 : 0}deg)`,\n    bg: `linear-gradient(120deg, ${xDelta < 0 ? '#f093fb 0%, #f5576c' : '#96fbc4 0%, #f9f586'} 100%)`,\n    size: down ? 1.15 : 1,\n    immediate: name => down && name === 'x'\n  });\n  const avSize = x.interpolate({\n    map: Math.abs,\n    range: [50, 300],\n    output: ['scale(0.5)', 'scale(1)'],\n    extrapolate: 'clamp'\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, { ...handlers,\n    class: \"item\",\n    style: {\n      background: bg,\n      transform: pers\n    },\n    children: [/*#__PURE__*/_jsxDEV(animated.div, {\n      class: \"av\",\n      style: {\n        transform: avSize,\n        justifySelf: xDelta < 0 ? 'end' : 'start'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      class: \"fg\",\n      style: {\n        transform: interpolate([x, y, size], (x, y, s) => `translate3d(${x}px,${y}px,0) scale(${s})`)\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"1MgBfIdZNxcmgWeaWC9aUjihkyU=\", false, function () {\n  return [useGesture, useSpring];\n});\n\n_c = Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/TransitionGrid/index.js"],"names":["React","ReactDOM","useSpring","animated","interpolate","config","useGesture","Slider","children","handlers","xDelta","down","x","y","bg","pers","size","immediate","name","avSize","map","Math","abs","range","output","extrapolate","background","transform","justifySelf","s"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,cAAzD;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAO,cAAP;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AAC5B;AACA;AACA,QAAM,CAACC,QAAD,EAAW;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAX,IAA+BL,UAAU,EAA/C;AACA,QAAM,CAAC;AAAEM,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAAD,IAA6Bd,SAAS,CAAC;AAC3CU,IAAAA,CAAC,EAAED,IAAI,GAAGD,MAAH,GAAY,CADwB;AAE3CG,IAAAA,CAAC,EAAEF,IAAI,GAAG,CAAC,EAAJ,GAAS,CAF2B;AAG3CI,IAAAA,IAAI,EAAG,8BAA6BJ,IAAI,GAAG,EAAH,GAAQ,CAAE,MAHP;AAI3CG,IAAAA,EAAE,EAAG,2BAA0BJ,MAAM,GAAG,CAAT,GAAa,qBAAb,GAAqC,qBAAsB,QAJ/C;AAK3CM,IAAAA,IAAI,EAAEL,IAAI,GAAG,IAAH,GAAU,CALuB;AAM3CM,IAAAA,SAAS,EAAEC,IAAI,IAAIP,IAAI,IAAIO,IAAI,KAAK;AANO,GAAD,CAA5C;AAQA,QAAMC,MAAM,GAAGP,CAAC,CAACR,WAAF,CAAc;AAAEgB,IAAAA,GAAG,EAAEC,IAAI,CAACC,GAAZ;AAAiBC,IAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,GAAL,CAAxB;AAAmCC,IAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,UAAf,CAA3C;AAAuEC,IAAAA,WAAW,EAAE;AAApF,GAAd,CAAf;AACA,sBACE,QAAC,QAAD,CAAU,GAAV,OAAkBhB,QAAlB;AAA4B,IAAA,KAAK,EAAC,MAAlC;AAAyC,IAAA,KAAK,EAAE;AAAEiB,MAAAA,UAAU,EAAEZ,EAAd;AAAkBa,MAAAA,SAAS,EAAEZ;AAA7B,KAAhD;AAAA,4BACE,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,KAAK,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAER,MAAb;AAAqBS,QAAAA,WAAW,EAAElB,MAAM,GAAG,CAAT,GAAa,KAAb,GAAqB;AAAvD;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,KAAK,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAE;AAAEiB,QAAAA,SAAS,EAAEvB,WAAW,CAAC,CAACQ,CAAD,EAAIC,CAAJ,EAAOG,IAAP,CAAD,EAAe,CAACJ,CAAD,EAAIC,CAAJ,EAAOgB,CAAP,KAAc,eAAcjB,CAAE,MAAKC,CAAE,eAAcgB,CAAE,GAApE;AAAxB,OAAhC;AAAA,6BACE;AAAA,kBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBQD,M;UAG8BD,U,EACFJ,S;;;KAJ5BK,M","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useSpring, animated, interpolate, config } from 'react-spring'\r\nimport { useGesture } from 'react-with-gesture'\r\nimport './styles.css'\r\n\r\nfunction Slider({ children }) {\r\n  // See: https://github.com/drcmda/react-with-gesture\r\n  // Gives access to: down, x, y, xDelta, yDelta, xInitial, yInitial\r\n  const [handlers, { xDelta, down }] = useGesture()\r\n  const [{ x, y, bg, pers, size }] = useSpring({\r\n    x: down ? xDelta : 0,\r\n    y: down ? -30 : 0,\r\n    pers: `perspective(800px) rotateX(${down ? 45 : 0}deg)`,\r\n    bg: `linear-gradient(120deg, ${xDelta < 0 ? '#f093fb 0%, #f5576c' : '#96fbc4 0%, #f9f586'} 100%)`,\r\n    size: down ? 1.15 : 1,\r\n    immediate: name => down && name === 'x'\r\n  })\r\n  const avSize = x.interpolate({ map: Math.abs, range: [50, 300], output: ['scale(0.5)', 'scale(1)'], extrapolate: 'clamp' })\r\n  return (\r\n    <animated.div {...handlers} class=\"item\" style={{ background: bg, transform: pers }}>\r\n      <animated.div class=\"av\" style={{ transform: avSize, justifySelf: xDelta < 0 ? 'end' : 'start' }} />\r\n      <animated.div class=\"fg\" style={{ transform: interpolate([x, y, size], (x, y, s) => `translate3d(${x}px,${y}px,0) scale(${s})`) }}>\r\n        <i>{children}</i>\r\n      </animated.div>\r\n    </animated.div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}