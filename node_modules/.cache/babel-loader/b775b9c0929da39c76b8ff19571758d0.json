{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\workspace\\\\yoru-ui-web\\\\src\\\\effectPages\\\\Draggable\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useSprings, animated } from \"@react-spring/web\";\nimport { useDrag } from \"react-use-gesture\";\nimport clamp from \"lodash.clamp\";\nimport swap from \"lodash-move\";\nimport styled from \"styled-components\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background: #f0f0f0;\n  display: flex;\n  align-items: center;\n  height: 100%;\n  justify-content: center;\n`;\n_c = Container;\nconst Content = styled.div`\n  position: relative;\n  width: 200px;\n  height: 100px;\n`;\n_c2 = Content;\nconst List = styled.div`\n  position: absolute;\n  width: 200px;\n  height: 40px;\n  transform-origin: 50% 50% 0px;\n  border-radius: 5px;\n  color: white;\n  line-height: 40px;\n  padding-left: 32px;\n  font-size: 14.5px;\n  background: lightblue;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  touch-action: none;\n  &:nth-child(1) {\n    background: linear-gradient(135deg, #f6d365 0%, #fda085 100%);\n  }\n  &:nth-child(2) {\n    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n  }\n  &:nth-child(3) {\n    background: linear-gradient(135deg, #5ee7df 0%, #b490ca 100%);\n  }\n  &::nth-child(4) {\n    background: linear-gradient(135deg, #c3cfe2 0%, #c3cfe2 100%);\n  }\n`;\n_c3 = List;\n\nconst fn = (order, active = false, originalIndex = 0, currentIndex = 0, y = 0) => index => active && index === originalIndex ? {\n  y: currentIndex * 50 + y,\n  scale: 1.1,\n  zIndex: 1,\n  shadow: 15,\n  immediate: key => key === \"y\" || key === \"zIndex\"\n} : {\n  y: order.indexOf(index) * 50,\n  scale: 1,\n  zIndex: 0,\n  shadow: 1,\n  immediate: false\n};\n\nfunction DraggableList({\n  items\n}) {\n  _s();\n\n  const order = useRef(items.map((_, index) => index));\n  const [springs, api] = useSprings(items.length, fn(order.current));\n  const bind = useDrag(({\n    args: [originalIndex],\n    active,\n    movement: [, y]\n  }) => {\n    const curIndex = order.current.indexOf(originalIndex);\n    const curRow = clamp(Math.round((curIndex * 100 + y) / 100), 0, items.length - 1);\n    const newOrder = swap(order.current, curIndex, curRow);\n    api.start(fn(newOrder, active, originalIndex, curIndex, y)); // Feed springs new style data, they'll animate the view without causing a single render\n\n    if (!active) order.current = newOrder;\n  });\n  return /*#__PURE__*/_jsxDEV(Content, {\n    style: {\n      height: items.length * 50\n    },\n    children: springs.map(({\n      zIndex,\n      shadow,\n      y,\n      scale\n    }, i) => /*#__PURE__*/_createElement(List, {\n      as: animated.div,\n      ...bind(i),\n      key: i,\n      style: {\n        zIndex,\n        boxShadow: shadow.to(s => `rgba(0, 0, 0, 0.15) 0px ${s}px ${2 * s}px 0px`),\n        y,\n        scale\n      },\n      children: items[i],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DraggableList, \"tZeeX9SCIkw9a0eI/37510C+5BA=\", false, function () {\n  return [useSprings, useDrag];\n});\n\n_c4 = DraggableList;\nexport default function Draggable() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(DraggableList, {\n      items: [\"Lorem\", \"ipsum\", \"dolor\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Draggable;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"DraggableList\");\n$RefreshReg$(_c5, \"Draggable\");","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/Draggable/index.js"],"names":["React","useRef","useSprings","animated","useDrag","clamp","swap","styled","Container","div","Content","List","fn","order","active","originalIndex","currentIndex","y","index","scale","zIndex","shadow","immediate","key","indexOf","DraggableList","items","map","_","springs","api","length","current","bind","args","movement","curIndex","curRow","Math","round","newOrder","start","height","i","boxShadow","to","s","Draggable"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,mBAArC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,S;AAQN,MAAME,OAAO,GAAGH,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAMC,O;AAMN,MAAMC,IAAI,GAAGJ,MAAM,CAACE,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;MAAME,I;;AA4BN,MAAMC,EAAE,GACN,CAACC,KAAD,EAAQC,MAAM,GAAG,KAAjB,EAAwBC,aAAa,GAAG,CAAxC,EAA2CC,YAAY,GAAG,CAA1D,EAA6DC,CAAC,GAAG,CAAjE,KACCC,KAAD,IACEJ,MAAM,IAAII,KAAK,KAAKH,aAApB,GACI;AACEE,EAAAA,CAAC,EAAED,YAAY,GAAG,EAAf,GAAoBC,CADzB;AAEEE,EAAAA,KAAK,EAAE,GAFT;AAGEC,EAAAA,MAAM,EAAE,CAHV;AAIEC,EAAAA,MAAM,EAAE,EAJV;AAKEC,EAAAA,SAAS,EAAGC,GAAD,IAASA,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK;AAL7C,CADJ,GAQI;AACEN,EAAAA,CAAC,EAAEJ,KAAK,CAACW,OAAN,CAAcN,KAAd,IAAuB,EAD5B;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,MAAM,EAAE,CAHV;AAIEC,EAAAA,MAAM,EAAE,CAJV;AAKEC,EAAAA,SAAS,EAAE;AALb,CAXR;;AAmBA,SAASG,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAkC;AAAA;;AAChC,QAAMb,KAAK,GAAGZ,MAAM,CAACyB,KAAK,CAACC,GAAN,CAAU,CAACC,CAAD,EAAIV,KAAJ,KAAcA,KAAxB,CAAD,CAApB;AACA,QAAM,CAACW,OAAD,EAAUC,GAAV,IAAiB5B,UAAU,CAACwB,KAAK,CAACK,MAAP,EAAenB,EAAE,CAACC,KAAK,CAACmB,OAAP,CAAjB,CAAjC;AACA,QAAMC,IAAI,GAAG7B,OAAO,CAAC,CAAC;AAAE8B,IAAAA,IAAI,EAAE,CAACnB,aAAD,CAAR;AAAyBD,IAAAA,MAAzB;AAAiCqB,IAAAA,QAAQ,EAAE,GAAGlB,CAAH;AAA3C,GAAD,KAAwD;AAC3E,UAAMmB,QAAQ,GAAGvB,KAAK,CAACmB,OAAN,CAAcR,OAAd,CAAsBT,aAAtB,CAAjB;AACA,UAAMsB,MAAM,GAAGhC,KAAK,CAClBiC,IAAI,CAACC,KAAL,CAAW,CAACH,QAAQ,GAAG,GAAX,GAAiBnB,CAAlB,IAAuB,GAAlC,CADkB,EAElB,CAFkB,EAGlBS,KAAK,CAACK,MAAN,GAAe,CAHG,CAApB;AAKA,UAAMS,QAAQ,GAAGlC,IAAI,CAACO,KAAK,CAACmB,OAAP,EAAgBI,QAAhB,EAA0BC,MAA1B,CAArB;AACAP,IAAAA,GAAG,CAACW,KAAJ,CAAU7B,EAAE,CAAC4B,QAAD,EAAW1B,MAAX,EAAmBC,aAAnB,EAAkCqB,QAAlC,EAA4CnB,CAA5C,CAAZ,EAR2E,CAQd;;AAC7D,QAAI,CAACH,MAAL,EAAaD,KAAK,CAACmB,OAAN,GAAgBQ,QAAhB;AACd,GAVmB,CAApB;AAWA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAEhB,KAAK,CAACK,MAAN,GAAe;AAAzB,KAAhB;AAAA,cACGF,OAAO,CAACF,GAAR,CAAY,CAAC;AAAEP,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBJ,MAAAA,CAAlB;AAAqBE,MAAAA;AAArB,KAAD,EAA+BwB,CAA/B,kBACX,eAAC,IAAD;AACE,MAAA,EAAE,EAAExC,QAAQ,CAACM,GADf;AAAA,SAEMwB,IAAI,CAACU,CAAD,CAFV;AAGE,MAAA,GAAG,EAAEA,CAHP;AAIE,MAAA,KAAK,EAAE;AACLvB,QAAAA,MADK;AAELwB,QAAAA,SAAS,EAAEvB,MAAM,CAACwB,EAAP,CACRC,CAAD,IAAQ,2BAA0BA,CAAE,MAAK,IAAIA,CAAE,QADtC,CAFN;AAKL7B,QAAAA,CALK;AAMLE,QAAAA;AANK,OAJT;AAYE,MAAA,QAAQ,EAAEO,KAAK,CAACiB,CAAD,CAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlCQlB,a;UAEgBvB,U,EACVE,O;;;MAHNqB,a;AAoCT,eAAe,SAASsB,SAAT,GAAqB;AAClC,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANuBA,S","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useSprings, animated } from \"@react-spring/web\";\r\nimport { useDrag } from \"react-use-gesture\";\r\nimport clamp from \"lodash.clamp\";\r\nimport swap from \"lodash-move\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background: #f0f0f0;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  width: 200px;\r\n  height: 100px;\r\n`;\r\n\r\nconst List = styled.div`\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 40px;\r\n  transform-origin: 50% 50% 0px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  line-height: 40px;\r\n  padding-left: 32px;\r\n  font-size: 14.5px;\r\n  background: lightblue;\r\n  text-transform: uppercase;\r\n  letter-spacing: 2px;\r\n  touch-action: none;\r\n  &:nth-child(1) {\r\n    background: linear-gradient(135deg, #f6d365 0%, #fda085 100%);\r\n  }\r\n  &:nth-child(2) {\r\n    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\r\n  }\r\n  &:nth-child(3) {\r\n    background: linear-gradient(135deg, #5ee7df 0%, #b490ca 100%);\r\n  }\r\n  &::nth-child(4) {\r\n    background: linear-gradient(135deg, #c3cfe2 0%, #c3cfe2 100%);\r\n  }\r\n`;\r\n\r\nconst fn =\r\n  (order, active = false, originalIndex = 0, currentIndex = 0, y = 0) =>\r\n  (index) =>\r\n    active && index === originalIndex\r\n      ? {\r\n          y: currentIndex * 50 + y,\r\n          scale: 1.1,\r\n          zIndex: 1,\r\n          shadow: 15,\r\n          immediate: (key) => key === \"y\" || key === \"zIndex\",\r\n        }\r\n      : {\r\n          y: order.indexOf(index) * 50,\r\n          scale: 1,\r\n          zIndex: 0,\r\n          shadow: 1,\r\n          immediate: false,\r\n        };\r\n\r\nfunction DraggableList({ items }) {\r\n  const order = useRef(items.map((_, index) => index));\r\n  const [springs, api] = useSprings(items.length, fn(order.current));\r\n  const bind = useDrag(({ args: [originalIndex], active, movement: [, y] }) => {\r\n    const curIndex = order.current.indexOf(originalIndex);\r\n    const curRow = clamp(\r\n      Math.round((curIndex * 100 + y) / 100),\r\n      0,\r\n      items.length - 1\r\n    );\r\n    const newOrder = swap(order.current, curIndex, curRow);\r\n    api.start(fn(newOrder, active, originalIndex, curIndex, y)); // Feed springs new style data, they'll animate the view without causing a single render\r\n    if (!active) order.current = newOrder;\r\n  });\r\n  return (\r\n    <Content style={{ height: items.length * 50 }}>\r\n      {springs.map(({ zIndex, shadow, y, scale }, i) => (\r\n        <List\r\n          as={animated.div}\r\n          {...bind(i)}\r\n          key={i}\r\n          style={{\r\n            zIndex,\r\n            boxShadow: shadow.to(\r\n              (s) => `rgba(0, 0, 0, 0.15) 0px ${s}px ${2 * s}px 0px`\r\n            ),\r\n            y,\r\n            scale,\r\n          }}\r\n          children={items[i]}\r\n        />\r\n      ))}\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default function Draggable() {\r\n  return (\r\n    <Container>\r\n      <DraggableList items={[\"Lorem\", \"ipsum\", \"dolor\"]}></DraggableList>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}