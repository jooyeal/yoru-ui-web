{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = () => {\n      invalidate();\n      if (regress) performance.regress();\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    return () => {\n      controls.removeEventListener('change', callback);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [regress, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/node_modules/@react-three/drei/core/OrbitControls.js"],"names":["_extends","React","useThree","useFrame","OrbitControls","OrbitControls$1","forwardRef","makeDefault","camera","regress","domElement","enableDamping","restProps","ref","invalidate","defaultCamera","gl","set","get","performance","explCamera","explDomElement","controls","useMemo","enabled","update","useEffect","callback","connect","addEventListener","removeEventListener","dispose","old","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = () => {\n      invalidate();\n      if (regress) performance.regress();\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    return () => {\n      controls.removeEventListener('change', callback);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [regress, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"]},"metadata":{},"sourceType":"module"}