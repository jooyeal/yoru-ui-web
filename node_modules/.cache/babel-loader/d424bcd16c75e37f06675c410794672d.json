{"ast":null,"code":"import { Point } from \"./point.js\";\nconst FOLLOW_SPEED = 0.08;\nconst ROTATE_SPEED = 0.12;\nconst MAX_ANGLE = 30;\nconst FPS = 1000 / 60;\nconst WIDTH = 260;\nconst HEIGHT = 260;\nexport class Dialog {\n  constructor() {\n    this.pos = new Point();\n    this.target = new Point();\n    this.prevPos = new Point();\n    this.downPos = new Point();\n    this.startPos = new Point();\n    this.mousePos = new Point();\n    this.centerPos = new Point();\n    this.origin = new Point();\n    this.rotation = 0;\n    this.sideValue = 0;\n    this.isDown = false;\n    this.text = \"\";\n  }\n\n  resize(stageWidth, stageHeight) {\n    this.pos.x = Math.random() * (stageWidth - WIDTH);\n    this.pos.y = Math.random() * (stageHeight - HEIGHT);\n    this.target = this.pos.clone();\n    this.prevPos = this.pos.clone();\n  }\n\n  animate(ctx) {\n    const move = this.target.clone().subtract(this.pos).reduce(FOLLOW_SPEED);\n    this.pos.add(move);\n    this.centerPos = this.pos.clone().add(this.mousePos);\n    this.swingDrag(ctx);\n    this.prevPos = this.pos.clone();\n  }\n\n  swingDrag(ctx) {\n    const dx = this.pos.x - this.prevPos.x;\n    const speedX = Math.abs(dx) / FPS;\n    const speed = Math.min(Math.max(speedX, 0), 1);\n    let rotation = MAX_ANGLE / 1 * speed;\n    rotation = rotation * (dx > 0 ? 1 : -1) - this.sideValue;\n    this.rotation += (rotation - this.rotation) * ROTATE_SPEED;\n    const tmpPos = this.pos.clone().add(this.origin);\n    ctx.save();\n    ctx.translate(tmpPos.x, tmpPos.y);\n    ctx.rotate(this.rotation * Math.PI / 180);\n    ctx.beginPath();\n    ctx.fillStyle = \"#f4e55a\";\n    ctx.fillRect(-this.origin.x, -this.origin.y, WIDTH, HEIGHT);\n    ctx.restore();\n  }\n\n  down(point) {\n    if (point.collide(this.pos, WIDTH, HEIGHT)) {\n      this.isDown = true;\n      this.startPos = this.pos.clone();\n      this.downPos = point.clone();\n      this.mousePos = point.clone().subtract(this.pos);\n      const xRatioValue = this.mousePos.x / WIDTH;\n      this.origin.x = WIDTH * xRatioValue;\n      this.origin.y = HEIGHT * this.mousePos.y / HEIGHT;\n      this.sideValue = xRatioValue - 0.5;\n      return this;\n    } else {\n      return null;\n    }\n  }\n\n  move(point) {\n    if (this.isDown) {\n      this.target = this.startPos.clone().add(point).subtract(this.downPos);\n    }\n  }\n\n  up() {\n    this.isDown = false;\n  }\n\n  inputText(text) {\n    this.text += text.key;\n    console.log(this.text);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/MoveRect/dialog.js"],"names":["Point","FOLLOW_SPEED","ROTATE_SPEED","MAX_ANGLE","FPS","WIDTH","HEIGHT","Dialog","constructor","pos","target","prevPos","downPos","startPos","mousePos","centerPos","origin","rotation","sideValue","isDown","text","resize","stageWidth","stageHeight","x","Math","random","y","clone","animate","ctx","move","subtract","reduce","add","swingDrag","dx","speedX","abs","speed","min","max","tmpPos","save","translate","rotate","PI","beginPath","fillStyle","fillRect","restore","down","point","collide","xRatioValue","up","inputText","key","console","log"],"mappings":"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","sourcesContent":["import { Point } from \"./point.js\";\r\n\r\nconst FOLLOW_SPEED = 0.08;\r\nconst ROTATE_SPEED = 0.12;\r\nconst MAX_ANGLE = 30;\r\nconst FPS = 1000 / 60;\r\nconst WIDTH = 260;\r\nconst HEIGHT = 260;\r\n\r\nexport class Dialog {\r\n  constructor() {\r\n    this.pos = new Point();\r\n    this.target = new Point();\r\n    this.prevPos = new Point();\r\n    this.downPos = new Point();\r\n    this.startPos = new Point();\r\n    this.mousePos = new Point();\r\n    this.centerPos = new Point();\r\n    this.origin = new Point();\r\n    this.rotation = 0;\r\n    this.sideValue = 0;\r\n    this.isDown = false;\r\n    this.text = \"\";\r\n  }\r\n\r\n  resize(stageWidth, stageHeight) {\r\n    this.pos.x = Math.random() * (stageWidth - WIDTH);\r\n    this.pos.y = Math.random() * (stageHeight - HEIGHT);\r\n    this.target = this.pos.clone();\r\n    this.prevPos = this.pos.clone();\r\n  }\r\n\r\n  animate(ctx) {\r\n    const move = this.target.clone().subtract(this.pos).reduce(FOLLOW_SPEED);\r\n    this.pos.add(move);\r\n\r\n    this.centerPos = this.pos.clone().add(this.mousePos);\r\n\r\n    this.swingDrag(ctx);\r\n\r\n    this.prevPos = this.pos.clone();\r\n  }\r\n\r\n  swingDrag(ctx) {\r\n    const dx = this.pos.x - this.prevPos.x;\r\n    const speedX = Math.abs(dx) / FPS;\r\n    const speed = Math.min(Math.max(speedX, 0), 1);\r\n\r\n    let rotation = (MAX_ANGLE / 1) * speed;\r\n    rotation = rotation * (dx > 0 ? 1 : -1) - this.sideValue;\r\n    this.rotation += (rotation - this.rotation) * ROTATE_SPEED;\r\n\r\n    const tmpPos = this.pos.clone().add(this.origin);\r\n    ctx.save();\r\n    ctx.translate(tmpPos.x, tmpPos.y);\r\n    ctx.rotate((this.rotation * Math.PI) / 180);\r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"#f4e55a\";\r\n    ctx.fillRect(-this.origin.x, -this.origin.y, WIDTH, HEIGHT);\r\n    ctx.restore();\r\n  }\r\n\r\n  down(point) {\r\n    if (point.collide(this.pos, WIDTH, HEIGHT)) {\r\n      this.isDown = true;\r\n      this.startPos = this.pos.clone();\r\n      this.downPos = point.clone();\r\n      this.mousePos = point.clone().subtract(this.pos);\r\n\r\n      const xRatioValue = this.mousePos.x / WIDTH;\r\n      this.origin.x = WIDTH * xRatioValue;\r\n      this.origin.y = (HEIGHT * this.mousePos.y) / HEIGHT;\r\n      this.sideValue = xRatioValue - 0.5;\r\n      return this;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  move(point) {\r\n    if (this.isDown) {\r\n      this.target = this.startPos.clone().add(point).subtract(this.downPos);\r\n    }\r\n  }\r\n\r\n  up() {\r\n    this.isDown = false;\r\n  }\r\n\r\n  inputText(text) {\r\n    this.text += text.key;\r\n    console.log(this.text);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}