{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\workspace\\\\yoru-ui-web\\\\src\\\\effectPages\\\\Unfold\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTransition, useSpring, useChain, config, animated, useSpringRef } from \"@react-spring/web\";\nimport styled from \"styled-components\";\nimport data from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 50rem;\n  background: lightblue;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = Wrapper;\nconst Container = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(4, minmax(100px, 1fr));\n  grid-gap: 25px;\n  padding: 25px;\n  background: white;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: 0px 10px 10px -5px rgba(0, 0, 0, 0.05);\n  will-change: width, height;\n`;\n_c2 = Container;\nconst Item = styled.div`\n  width: 100%;\n  height: 100%;\n  background: white;\n  border-radius: 5px;\n  will-change: transform, opacity;\n`;\n_c3 = Item;\nexport default function App() {\n  _s();\n\n  const [open, set] = useState(false);\n  const springApi = useSpringRef();\n  const {\n    size,\n    ...rest\n  } = useSpring({\n    ref: springApi,\n    config: config.stiff,\n    from: {\n      size: \"20%\",\n      background: \"hotpink\"\n    },\n    to: {\n      size: open ? \"100%\" : \"20%\",\n      background: open ? \"white\" : \"hotpink\"\n    }\n  });\n  const transApi = useSpringRef();\n  const transition = useTransition(open ? data : [], {\n    ref: transApi,\n    trail: 400 / data.length,\n    from: {\n      opacity: 0,\n      scale: 0\n    },\n    enter: {\n      opacity: 1,\n      scale: 1\n    },\n    leave: {\n      opacity: 0,\n      scale: 0\n    }\n  });\n  useChain(open ? [springApi, transApi] : [transApi, springApi], [0, open ? 0.1 : 0.6]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: { ...rest,\n        width: size,\n        height: size\n      },\n      as: animated.div,\n      onClick: () => set(open => !open),\n      children: transition((style, item) => /*#__PURE__*/_jsxDEV(Item, {\n        as: animated.div,\n        style: { ...style,\n          background: item.css\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JQ+fq6eRyVNHY9Lc8YE8NcaD2xg=\", false, function () {\n  return [useSpringRef, useSpring, useSpringRef, useTransition, useChain];\n});\n\n_c4 = App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Item\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/effectPages/Unfold/index.js"],"names":["React","useState","useTransition","useSpring","useChain","config","animated","useSpringRef","styled","data","Wrapper","div","Container","Item","App","open","set","springApi","size","rest","ref","stiff","from","background","to","transApi","transition","trail","length","opacity","scale","enter","leave","width","height","style","item","css"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  useTransition,\r\n  useSpring,\r\n  useChain,\r\n  config,\r\n  animated,\r\n  useSpringRef,\r\n} from \"@react-spring/web\";\r\nimport styled from \"styled-components\";\r\nimport data from \"./data\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50rem;\r\n  background: lightblue;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(100px, 1fr));\r\n  grid-gap: 25px;\r\n  padding: 25px;\r\n  background: white;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 10px 10px -5px rgba(0, 0, 0, 0.05);\r\n  will-change: width, height;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border-radius: 5px;\r\n  will-change: transform, opacity;\r\n`;\r\n\r\nexport default function App() {\r\n  const [open, set] = useState(false);\r\n\r\n  const springApi = useSpringRef();\r\n  const { size, ...rest } = useSpring({\r\n    ref: springApi,\r\n    config: config.stiff,\r\n    from: { size: \"20%\", background: \"hotpink\" },\r\n    to: {\r\n      size: open ? \"100%\" : \"20%\",\r\n      background: open ? \"white\" : \"hotpink\",\r\n    },\r\n  });\r\n\r\n  const transApi = useSpringRef();\r\n  const transition = useTransition(open ? data : [], {\r\n    ref: transApi,\r\n    trail: 400 / data.length,\r\n    from: { opacity: 0, scale: 0 },\r\n    enter: { opacity: 1, scale: 1 },\r\n    leave: { opacity: 0, scale: 0 },\r\n  });\r\n\r\n  useChain(open ? [springApi, transApi] : [transApi, springApi], [\r\n    0,\r\n    open ? 0.1 : 0.6,\r\n  ]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container\r\n        style={{ ...rest, width: size, height: size }}\r\n        as={animated.div}\r\n        onClick={() => set((open) => !open)}\r\n      >\r\n        {transition((style, item) => (\r\n          <Item as={animated.div} style={{ ...style, background: item.css }} />\r\n        ))}\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}