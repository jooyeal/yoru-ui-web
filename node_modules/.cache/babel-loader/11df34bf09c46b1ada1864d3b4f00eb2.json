{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/workspace/yoru-ui-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import AceEditor from\"react-ace\";import ToolTip from\"@yoru_cha/yoru-ui-react/dist/Tooltip\";import IconButton from\"@yoru_cha/yoru-ui-react/dist/IconButton\";import Icon from\"@yoru_cha/yoru-ui-react/dist/Icon\";import\"ace-builds/src-noconflict/mode-javascript\";import\"ace-builds/src-noconflict/theme-chaos\";import\"ace-builds/src-noconflict/ext-language_tools\";import{text}from\"../../text/ToolTip\";import{Wrapper,Container,ContainerNav}from\"../style\";import{Button}from\"@yoru_cha/yoru-ui-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ToolTipPage(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),count=_React$useState4[0],setCount=_React$useState4[1];return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"48px\",fontWeight:\"600\"},children:\"Tool Tip\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"tomato\"},children:\"This component needs modification\"}),/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:\"24px\",fontWeight:\"400\"},children:\"Tooltips display informative text when users hover over, focus on, or tap an element\"}),/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:\"24px\",fontWeight:\"400\"},children:\"It is designed to be user-friendly, and it's easy to use\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(ToolTip,{content:\"tooltip\",direction:\"top\",position:\"40\",delay:1000,children:/*#__PURE__*/_jsx(Button,{children:\"click\"})}),/*#__PURE__*/_jsx(ToolTip,{content:\"tooltip\",direction:\"bottom\",position:\"40\",delay:1000,children:/*#__PURE__*/_jsx(Button,{children:\"click\"})})]}),/*#__PURE__*/_jsx(ContainerNav,{children:/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return setOpen(function(prev){return!prev;});},children:/*#__PURE__*/_jsx(Icon,{children:/*#__PURE__*/_jsx(\"path\",{d:\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"})})})}),open?/*#__PURE__*/_jsx(AceEditor,{mode:\"javascript\",theme:\"chaos\",width:\"64rem\",height:\"15rem\",fontSize:18,readOnly:true,name:\"editor-simple-button\",value:text}):null]});}","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/src/pages/ToolTipPage/index.js"],"names":["React","AceEditor","ToolTip","IconButton","Icon","text","Wrapper","Container","ContainerNav","Button","ToolTipPage","useState","open","setOpen","count","setCount","fontSize","fontWeight","color","prev"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sCAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yCAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mCAAjB,CACA,MAAO,2CAAP,CACA,MAAO,uCAAP,CACA,MAAO,8CAAP,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,OAAT,CAAkBC,SAAlB,CAA6BC,YAA7B,KAAiD,UAAjD,CACA,OAASC,MAAT,KAAuB,yBAAvB,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,oBAAwBV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAA0Bb,KAAK,CAACW,QAAN,CAAe,CAAf,CAA1B,qDAAOG,KAAP,qBAAcC,QAAd,qBACA,mBACE,MAAC,OAAD,yBACE,WAAI,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,KAAhC,CAAX,sBADF,cAEE,UAAG,KAAK,CAAE,CAAEC,KAAK,CAAE,QAAT,CAAV,+CAFF,cAGE,WAAI,KAAK,CAAE,CAAEF,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,KAAhC,CAAX,kGAHF,cAOE,WAAI,KAAK,CAAE,CAAED,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,KAAhC,CAAX,sEAPF,cAUE,aAVF,cAWE,MAAC,SAAD,yBACE,KAAC,OAAD,EAAS,OAAO,CAAC,SAAjB,CAA2B,SAAS,CAAC,KAArC,CAA2C,QAAQ,CAAC,IAApD,CAAyD,KAAK,CAAE,IAAhE,uBACE,KAAC,MAAD,oBADF,EADF,cAIE,KAAC,OAAD,EACE,OAAO,CAAC,SADV,CAEE,SAAS,CAAC,QAFZ,CAGE,QAAQ,CAAC,IAHX,CAIE,KAAK,CAAE,IAJT,uBAME,KAAC,MAAD,oBANF,EAJF,GAXF,cAwBE,KAAC,YAAD,wBACE,KAAC,UAAD,EAAY,OAAO,CAAE,yBAAMJ,CAAAA,OAAO,CAAC,SAACM,IAAD,QAAU,CAACA,IAAX,EAAD,CAAb,EAArB,uBACE,KAAC,IAAD,wBACE,aAAM,CAAC,CAAC,4FAAR,EADF,EADF,EADF,EAxBF,CA+BGP,IAAI,cACH,KAAC,SAAD,EACE,IAAI,CAAC,YADP,CAEE,KAAK,CAAC,OAFR,CAGE,KAAK,CAAC,OAHR,CAIE,MAAM,CAAC,OAJT,CAKE,QAAQ,CAAE,EALZ,CAME,QAAQ,CAAE,IANZ,CAOE,IAAI,CAAC,sBAPP,CAQE,KAAK,CAAEP,IART,EADG,CAWD,IA1CN,GADF,CA8CD","sourcesContent":["import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport ToolTip from \"@yoru_cha/yoru-ui-react/dist/Tooltip\";\r\nimport IconButton from \"@yoru_cha/yoru-ui-react/dist/IconButton\";\r\nimport Icon from \"@yoru_cha/yoru-ui-react/dist/Icon\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-chaos\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport { text } from \"../../text/ToolTip\";\r\nimport { Wrapper, Container, ContainerNav } from \"../style\";\r\nimport { Button } from \"@yoru_cha/yoru-ui-react\";\r\n\r\nexport default function ToolTipPage() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [count, setCount] = React.useState(0);\r\n  return (\r\n    <Wrapper>\r\n      <h1 style={{ fontSize: \"48px\", fontWeight: \"600\" }}>Tool Tip</h1>\r\n      <p style={{ color: \"tomato\" }}>This component needs modification</p>\r\n      <h2 style={{ fontSize: \"24px\", fontWeight: \"400\" }}>\r\n        Tooltips display informative text when users hover over, focus on, or\r\n        tap an element\r\n      </h2>\r\n      <h2 style={{ fontSize: \"24px\", fontWeight: \"400\" }}>\r\n        It is designed to be user-friendly, and it's easy to use\r\n      </h2>\r\n      <br></br>\r\n      <Container>\r\n        <ToolTip content=\"tooltip\" direction=\"top\" position=\"40\" delay={1000}>\r\n          <Button>click</Button>\r\n        </ToolTip>\r\n        <ToolTip\r\n          content=\"tooltip\"\r\n          direction=\"bottom\"\r\n          position=\"40\"\r\n          delay={1000}\r\n        >\r\n          <Button>click</Button>\r\n        </ToolTip>\r\n      </Container>\r\n      <ContainerNav>\r\n        <IconButton onClick={() => setOpen((prev) => !prev)}>\r\n          <Icon>\r\n            <path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"></path>\r\n          </Icon>\r\n        </IconButton>\r\n      </ContainerNav>\r\n      {open ? (\r\n        <AceEditor\r\n          mode=\"javascript\"\r\n          theme=\"chaos\"\r\n          width=\"64rem\"\r\n          height=\"15rem\"\r\n          fontSize={18}\r\n          readOnly={true}\r\n          name=\"editor-simple-button\"\r\n          value={text}\r\n        ></AceEditor>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}