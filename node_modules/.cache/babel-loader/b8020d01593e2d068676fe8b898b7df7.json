{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from \"react\";\nimport { lighten } from \"polished\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.label`\n  display: inline-block;\n  vertical-align: middle;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\nconst HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  // Hide checkbox visually but remain accessible to screen readers.\n  // Source: https://polished.js.org/docs/#hidevisually\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked ? props.color : lighten(0.05, props.color)};\n  border-radius: 3px;\n  transition: all 150ms;\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px #cfd8dc;\n  }\n  ${Icon} {\n    visibility: ${props => props.checked ? \"visible\" : \"hidden\"};\n  }\n`;\nexport default function CheckBox({\n  color = \"#81C784\",\n  defaultChecked,\n  checked,\n  onChange = () => null,\n  ...rest\n}) {\n  const [thisChecked, setThisChecked] = React.useState(false);\n\n  const thisOnChange = e => {\n    setThisChecked(e.target.checked);\n    onChange(e);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(HiddenCheckbox, _extends({}, rest, {\n    type: \"checkbox\",\n    checked: defaultChecked ? thisChecked : checked,\n    onChange: defaultChecked ? thisOnChange : onChange\n  })), /*#__PURE__*/React.createElement(StyledCheckbox, {\n    color: color,\n    checked: defaultChecked ? thisChecked : checked\n  }, /*#__PURE__*/React.createElement(Icon, {\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }))));\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/workspace/yoru-ui-web/node_modules/@yoru_cha/yoru-ui-react/dist/CheckBox/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","lighten","styled","Wrapper","label","HiddenCheckbox","input","attrs","type","Icon","svg","StyledCheckbox","div","props","checked","color","CheckBox","defaultChecked","onChange","rest","thisChecked","setThisChecked","useState","thisOnChange","e","createElement","viewBox","points"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { lighten } from \"polished\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.label`\n  display: inline-block;\n  vertical-align: middle;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\nconst HiddenCheckbox = styled.input.attrs({\n  type: \"checkbox\"\n})`\n  // Hide checkbox visually but remain accessible to screen readers.\n  // Source: https://polished.js.org/docs/#hidevisually\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${props => props.checked ? props.color : lighten(0.05, props.color)};\n  border-radius: 3px;\n  transition: all 150ms;\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px #cfd8dc;\n  }\n  ${Icon} {\n    visibility: ${props => props.checked ? \"visible\" : \"hidden\"};\n  }\n`;\nexport default function CheckBox({\n  color = \"#81C784\",\n  defaultChecked,\n  checked,\n  onChange = () => null,\n  ...rest\n}) {\n  const [thisChecked, setThisChecked] = React.useState(false);\n\n  const thisOnChange = e => {\n    setThisChecked(e.target.checked);\n    onChange(e);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(HiddenCheckbox, _extends({}, rest, {\n    type: \"checkbox\",\n    checked: defaultChecked ? thisChecked : checked,\n    onChange: defaultChecked ? thisOnChange : onChange\n  })), /*#__PURE__*/React.createElement(StyledCheckbox, {\n    color: color,\n    checked: defaultChecked ? thisChecked : checked\n  }, /*#__PURE__*/React.createElement(Icon, {\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }))));\n}"]},"metadata":{},"sourceType":"module"}